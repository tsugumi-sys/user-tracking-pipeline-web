version: '3.8'
services:
  js-script-server:
    build:
      context: js-script-server
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./js-script-server:/js-script-server
    working_dir: /js-script-server
  web-app:
    build:
      context: web-app
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    volumes:
      - ./web-app:/web-app
      - /web-app/node_modules
      - /web-app/.next
    working_dir: /web-app
    environment:
      - NODE_ENV=production
  proxy-server:
    build:
      context: proxy-server
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    volumes:
      - ./proxy-server:/proxy-server
    working_dir: /proxy-server
    networks:
      - log-infra
  log-server:
    build:
      context: log-server
      dockerfile: Dockerfile
    ports:
      - '8686:8686'
    volumes:
      - ./log-server:/log-server
    working_dir: /log-server
    networks:
      - log-infra
  npm-registry-server:
    build:
      context: npm-registry-server
      dockerfile: Dockerfile
    ports:
      - '4873:4873'
    volumes:
      - ./npm-registry-server/conf:/verdaccio/conf
      - verdaccio-storage:/verdaccio/storage
      - verdaccio-plugins:/verdaccio/plugins
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.10
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - log-infra
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  redpanda-console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.4.5
    networks:
      - log-infra
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0
  timeseries-db:
    image: prom/prometheus
    volumes:
     - './timeseries-db/prometheus.yml:/etc/prometheus/prometheus.yml'
     - 'prometheus-data:/prometheus'
    ports:
     - '9090:9090'
    networks:
      - log-infra

  monitoring-ui:
    image: grafana/grafana:latest
    volumes:
      - './monitoring-ui:/var/lib/grafana/dashboards'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: secret # Change this to a password of your choice
    ports:
      - "7070:3000"
    networks:
      - log-infra
    depends_on:
      - redpanda-0

volumes:
  js-script-server:
    driver: local
  web-app:
    driver: local
  log-server:
    driver: local
  verdaccio-storage:
    driver: local
  verdaccio-plugins:
    driver: local
  redpanda-0: null
  prometheus-data:
    driver: local


networks:
  log-infra:
